<?xml version="1.0" encoding="UTF-8" ?>
<meta-storm xmlns="meta-storm">
    <definitions>
        <!-- ===================================================================
            Attribute : Skip When
        ==================================================================== -->

        <classConstructor class="\TypeLang\Mapper\Mapping\SkipWhen"
                          argument="0">
            <languageInjection language="TypeScript" />
        </classConstructor>

        <!-- ===================================================================
            Attribute : Discriminator Map
        ==================================================================== -->

        <classConstructor class="\TypeLang\Mapper\Mapping\DiscriminatorMap"
                          argument="0">
            <properties xpath="$containingClass" />
        </classConstructor>

        <classConstructor class="\TypeLang\Mapper\Mapping\DiscriminatorMap"
                          argument="2">
            <languageInjection language="InjectablePHP" />
        </classConstructor>

        <!-- ===================================================================
            Attribute : Map Type
        ==================================================================== -->

        <classConstructor class="\TypeLang\Mapper\Mapping\MapType"
                          argument="0">
            <languageInjection language="InjectablePHP" />
        </classConstructor>

        <!-- ===================================================================
            Attribute : Map Name
        ==================================================================== -->

        <classConstructor class="\TypeLang\Mapper\Mapping\MapName"
                          argument="0">
            <properties xpath="$containingClass" />
        </classConstructor>

        <!-- ===================================================================
            Denormalizer
        ==================================================================== -->

        <classMethod class="\TypeLang\Mapper\DenormalizerInterface"
                     method="denormalize"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Mapper"
                     method="denormalize"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\DenormalizerInterface"
                     method="isDenormalizable"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Mapper"
                     method="isDenormalizable"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <!-- ===================================================================
            Normalizer
        ==================================================================== -->

        <classMethod class="\TypeLang\Mapper\NormalizerInterface"
                     method="normalize"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Mapper"
                     method="normalize"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\NormalizerInterface"
                     method="isNormalizable"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Mapper"
                     method="isNormalizable"
                     argument="1">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <!-- ===================================================================
            Mapper
        ==================================================================== -->

        <classMethod class="\TypeLang\Mapper\Mapper"
                     method="getType"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <!-- ===================================================================
            Type Repository
        ==================================================================== -->

        <classMethod class="\TypeLang\Mapper\Runtime\Context"
                     method="getTypeByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Repository\TypeRepositoryFacadeInterface"
                     method="getTypeByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Repository\TypeRepositoryFacade"
                     method="getTypeByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <!-- ===================================================================
            Type Parser
        ==================================================================== -->

        <classMethod class="\TypeLang\Mapper\Runtime\Context"
                     method="getStatementByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Parser\TypeParserInterface"
                     method="getStatementByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Parser\InMemoryTypeParser"
                     method="getStatementByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Parser\LoggableTypeParser"
                     method="getStatementByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Parser\TraceableTypeParser"
                     method="getStatementByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Parser\TypeParser"
                     method="getStatementByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>

        <classMethod class="\TypeLang\Mapper\Runtime\Parser\TypeParserFacade"
                     method="getStatementByDefinition"
                     argument="0">
            <languageInjection language="InjectablePHP" />
        </classMethod>
    </definitions>
</meta-storm>
